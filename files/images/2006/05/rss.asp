<%@ Language=VBScript %>
<% Option Explicit 

'// Declare some variables
Dim strConnection, arrItems, objConn, objRS, strDBPath, temp, i

'// Set Content-Type
Response.ContentType = "application/xml"

'// Show general information:
%><?xml version="1.0" encoding="iso-8859-1"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:admin="http://webns.net/mvcb/" xmlns="http://purl.org/rss/1.0/" xmlns:content="http://purl.org/rss/1.0/modules/content/">

<channel rdf:about="http://www.iaminawe.com/">
<title>Iaminawe News Blog</title>

<link>http://localhost</link>

<description>This is an example feed, generated by an ASP script.</description>

<language>en-us</language>

<webMaster>webmaster@you.com</webMaster>

<items>

<%
'// Time to get the items from the database!

	'// Create connection, record set object.
	Set objConn = Server.CreateObject("ADODB.Connection")

	'// Get database path
	strDBPath = Request.ServerVariables("PATH_TRANSLATED")
	strDBPath = Replace(strDBPath, "\", "/")
	temp = Split(strDBPath, "/")
	strDBPath = Replace(strDBPath, temp(UBound(temp)), Empty)

	'// Create a connection to the database
	strConnection = "dsn=iaminawe_data;"
	
	'// Open connection		
	objConn.Open strConnection

	Set objRS = objConn.Execute("SELECT * from News ORDER BY itemid DESC")

	'// Store items in an array
	arrItems = objRS.GetRows

	'// Close RecordSet
	objRS.Close

	'// Close connection
	objConn.Close

	'// Remove objects from memory
	Set objRS = Nothing
	Set objConn = Nothing

'// Now that is over, we've got the items in an array!
'// For more information about using GetRows, have a look at
'// http://www.juicystudio.com/tutorial/asp/getrows.asp

'// Create a 'contents' for our feed
	Response.Write "<rdf:Seq>" & vbCrLf

	'// Loop through each item
	For	i = 0 To UBound(arrItems, 2)
		'// Display URL-link
		Response.Write _
		"<rdf:li rdf:resource=""" & arrItems(3, i) & """ />" & vbCrLf
	Next

	Response.Write "</rdf:Seq>" & vbCrLf

'// Now that our 'contents' is complete, close the channel
Response.Write "</items>" & vbCrLf
Response.Write "</channel>" & vbCrLf & vbCrLf

'// Now loop through each item, and output all its data
For i = 0 To UBound(arrItems, 2)
	'// Begin item (include the url)
	Response.Write _
	"<item rdf:about=""" & arrItems(3, i) & """>" & vbCrLf
	
	'// Add title
	Response.Write _
	"<title>" & arrItems(1, i) & "</title>" & vbCrLf
	
	'// Add description tag
	Response.Write _
	"<description><![CDATA[" & arrItems(2, i) & "]]></description>" & vbCrLf
	
	'// Add the contents tag
	'// This can be same as the description, but may differ as well
	Response.Write _
	"<content:encoded><![CDATA[" & arrItems(2, i) & "]]></content:encoded>" & vbCrLf
	
	'// Add the subject/category
	Response.Write _
	"<dc:subject>" & arrItems(4, i) & "</dc:subject>" & vbCrLf
	
	'// Add the poster/author
	Response.Write _
	"<dc:creator>" & arrItems(5, i) & "</dc:creator>" & vbCrLf
	
		'// Add the date
	Response.Write _
	"<pubdate>" & arrItems(6, i) & "</pubdate>" & vbCrLf
	
		
	'// And finally, close the item
	Response.Write _
	"</item>" & vbCrLf & vbCrLf
Next

'// The feed is now finished, all the necessary information has been included.
'// There are more tags available, but those are optional.
'// Have a look at http://purl.org/rss/1.0/modules/ for more information

'// End the feed:
%>
</rdf:RDF>